model Survey {
  id              String           @id @default(cuid())
  title           String           @db.VarChar(200)
  description     String?          @db.Text
  isActive        Boolean          @default(true)
  daysAfterHiring Int              @default(30)
  surveyDuration  Int              @default(30)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  questions       SurveyQuestion[]
  responses       SurveyResponse[]
}

model SurveyQuestion {
  id         String         @id @default(cuid())
  surveyId   String
  question   String         @db.Text
  order      Int
  isRequired Boolean        @default(true)
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  answers    SurveyAnswer[]
  survey     Survey         @relation(fields: [surveyId], references: [id], onDelete: Cascade)

  @@index([surveyId])
}

model SurveyResponse {
  id          String         @id @default(cuid())
  surveyId    String
  companyId   String
  studentId   String
  isCompleted Boolean        @default(false)
  comments    String?        @db.Text
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  answers     SurveyAnswer[]
  company     company        @relation(fields: [companyId], references: [id], onDelete: Cascade)
  student     User           @relation("StudentSurveyResponses", fields: [studentId], references: [id], onDelete: Cascade)
  survey      Survey         @relation(fields: [surveyId], references: [id], onDelete: Cascade)

  @@unique([surveyId, companyId, studentId])
  @@index([surveyId])
  @@index([companyId])
  @@index([studentId])
}

model SurveyAnswer {
  id         String         @id @default(cuid())
  responseId String
  questionId String
  rating     Int
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  question   SurveyQuestion @relation(fields: [questionId], references: [id], onDelete: Cascade)
  response   SurveyResponse @relation(fields: [responseId], references: [id], onDelete: Cascade)

  @@unique([responseId, questionId])
  @@index([responseId])
  @@index([questionId])
}
